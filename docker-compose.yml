version: "2"



services:
 minetest:
  image: registry.rudin.io/x86/minetest:pandorabox
  restart: always
  ports:
   - "30000:30000/udp"
  depends_on:
   - "postgres"
  volumes:
   - "./data/minetest:/data"
   - "./data/minetest/debug.txt:/usr/local/debug.txt"
  working_dir: /data
  command: minetestserver --config /data/minetest.conf --world /data/world/ --quiet
  logging:
   options:
    max-size: 50m

 logrotate:
  image: itsthenetwork/alpine-logrotate
  volumes:
   - "./data/logrotate.conf:/etc/logrotate.conf"
   - "./data/minetest:/logs"
  logging:
   options:
    max-size: 50m

 tileserver:
  image: registry.rudin.io/x86/minetest-tileserver
  restart: always
  networks:
   - default
  depends_on:
   - "postgres"
   - "postgres-tiles"
  volumes:
   - "./data/tileserver.properties:/tileserver.properties"
   - "./data/tileserver.layers.json:/layers.json"
   - "./data/tiles:/tiles"
  logging:
   options:
    max-size: 50m

 postgres:
  image: postgres:10
  restart: always
  shm_size: '2gb'
  environment:
   POSTGRES_PASSWORD: enter
  volumes:
   - "./data/postgres-minetest:/var/lib/postgresql/data"
   - "./data/postgres-minetest-backup:/backup"
   - "./data/postgres-minetest-restore:/restore"
  logging:
   options:
    max-size: 50m

 portainer:
  image: portainer/portainer
  restart: always
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /opt/portainer/data:/data

 postgres-tiles:
  image: postgres
  restart: always
  shm_size: '2gb'
  environment:
   POSTGRES_PASSWORD: enter
  volumes:
   - "./data/postgres-tiles:/var/lib/postgresql/data"

 nginx:
  image: nginx
  networks:
   - terminator
   - default
  restart: always
  depends_on:
   - highscore
   - grafana
   - tileserver
   - portainer
  environment:
   VIRTUAL_PORT: 80
   VIRTUAL_HOST: test.pandorabox.io
   LETSENCRYPT_HOST: test.pandorabox.io
   LETSENCRYPT_EMAIL: thomas@rudin.io
  volumes:
   - "./data/nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
   - "./data/nginx/routes:/routes"
   - "./data/nginx/html:/html"
   - "./data/minetest/world/news.txt:/html/news.txt"
  logging:
   options:
    max-size: 50m

 highscore:
  image: registry.rudin.io/x86/minetest-xp-highscore
  restart: always
  volumes:
   - "./data/minetest/world:/data/world:ro"
  depends_on:
   - postgres
  environment:
   PGHOST: postgres
   PGUSER: postgres
   PGDATABASE: postgres
   PGPASSWORD: enter
   PGPORT: 5432

 webmail:
  image: registry.rudin.io/x86/minetest-webmail
  restart: always
  depends_on:
   - minetest

 pushgateway:
  image: prom/pushgateway
  restart: always

 postgres-exporter:
  image: wrouesnel/postgres_exporter
  restart: always
  depends_on:
   - "postgres"
  environment:
   DATA_SOURCE_NAME: postgresql://postgres:enter@postgres:5432/?sslmode=disable
  logging:
   options:
    max-size: 50m

 postgres-tiles-exporter:
  image: wrouesnel/postgres_exporter
  restart: always
  depends_on:
   - "postgres-tiles"
  environment:
   DATA_SOURCE_NAME: postgresql://postgres-tiles:enter@postgres:5432/?sslmode=disable
  logging:
   options:
    max-size: 50m

 prometheus:
  image: prom/prometheus:v2.6.1
  volumes:
   - ./data/prometheus.yml:/etc/prometheus/prometheus.yml
   - ./data/prometheus:/prometheus/data
  depends_on:
   - "pushgateway"
  command:
   - '--config.file=/etc/prometheus/prometheus.yml'
  logging:
   options:
    max-size: 50m

 grafana:
  image: grafana/grafana
  restart: always
  environment:
   - GF_SECURITY_ADMIN_PASSWORD=enter
  depends_on:
   - prometheus
  volumes:
   - "./data/grafana:/var/lib/grafana"
   - "./data/grafana.ini:/etc/grafana/grafana.ini"
  logging:
   options:
    max-size: 50m


networks:
 terminator:
  external: true

 
