return {["interrupt"] = {["queue"] = {}, ["timer"] = 39104937.228346}, ["version"] = 1, ["active"] = {["nodes"] = {["(-2268,-8,783)"] = {["code"] = "if event then\
  -- digiline_send(\"screen\", string.format(\"%02d\", os.date().min) .. \":\" .. string.format(\"%02d\", os.date().sec))\
end\
\
if event.punch then\
  F.updateTimer(\"screen\", timetable)\
end\
\
if event.ext_int then\
  if timetable == nil then\
    timetable = {}\
  end\
  -- table.insert(timetable, { id = event.message.id, ts = event.message.ts })\
  if #timetable == 1 then\
    F.updateTimer(\"screen\", timetable)\
  end\
  return\
end\
\
if event.int and event.message == \"update\" then\
  F.updateTimer(\"screen\", timetable)\
  return\
end", ["data"] = {["timetable"] = {}}, ["env"] = "subway"}, ["(-2018,-30,970)"] = {["code"] = "local screen = \"scr2\"\
\
if event then\
  local st = \"St01\"\
  F.timetable(screen, \"+\" .. S.stations[st].name)\
  -- digiline_send(screen, event.type)\
end", ["data"] = {}, ["env"] = "subway"}, ["(-2138,-10,787)"] = {["code"] = "local dst = 125\
if event.train then\
  digiline_send(\"sc\", \"debug\" .. tostring(atc_speed))\
  local ms = dst / atc_speed\
  interrupt_pos(POS(-2268, -8, 783), { id = atc_id, ts = math.ceil(ms) + S.stopTime })\
end", ["arrowconn"] = 12, ["data"] = {}, ["env"] = "subway"}, ["(-2145,21,780)"] = {["data"] = {}, ["arrowconn"] = 0, ["code"] = "if event.train then\
  local line = get_line() \
  digiline_send(\"scr\", \" | Last Line | \" .. line .. \" | \" .. atc_speed)\
  if line == \"1\" then\
    setstate(\"sw-main\", \"st\")\
    return\
  end\
\
  setstate(\"sw-main\", \"cr\")\
end", ["env"] = "subway"}}}, ["pcnaming"] = {["sw-main"] = {["y"] = 22, ["x"] = -2135, ["z"] = 787}}, ["envs"] = {["subway"] = {["init_code"] = "S.stations = {\
  St01 = { name = \"Main Station\" }\
}\
\
F.timetable = function(screen, text)\
  digiline_send(screen, text)\
end\
\
S.stopTime = 5\
\
local timetableRow = function(text,eta)\
  local e =  type(eta) == \"number\" and string.format(\"%02d\", eta) or eta\
  return string.format(\"%-22s\", text) .. e .. \"|\"\
end\
\
F.updateTimer = function(screen, timetable)\
  local i = 1\
  -- local rows = string.format(\"%-22s\", \"Train ID\") .. \"ETA|\"\
  local rows = timetableRow(\"Train ID\", \"ETA\")\
  while i <= #timetable do\
    if timetable[i].ts <= 1 then\
      -- rows = rows .. string.format(\"%-22s\", timetable[i].id) .. \"STOP|\"\
      rows = rows .. timetableRow(timetable[i].id, \"STOP\")\
      timetable[i].ts = timetable[i].ts - 1      \
      if timetable[i].ts < S.stopTime * -1 then\
        table.remove(timetable, i)\
     else\
       i = i + 1\
     end\
    else\
      timetable[i].ts = timetable[i].ts - 1\
      rows = rows .. timetableRow(timetable[i].id, timetable[i].ts)\
      -- rows = rows .. string.format(\"%-22s\", timetable[i].id) .. string.format(\"%02d\", timetable[i].ts) .. \"|\"\
      i = i + 1\
    end\
  end\
  digiline_send(screen, rows)\
  if #timetable > -1 then\
    -- F.updateTimer(screen, timetable)\
   -- interrupt(1, \"update\")\
  end\
end", ["step_code"] = "", ["sdata"] = {["stopTime"] = 5, ["stations"] = {["St01"] = {["name"] = "Main Station"}}}}}}